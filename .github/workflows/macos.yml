name: "Build RGFW Quake"

on:
  push:

concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build-win32:
    name: "Build for Linux 32-bit"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt-get install -y --no-install-recommends libx11-dev mesa-common-dev libglx-dev libxcursor-dev mesa-vulkan-drivers libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libglu1-mesa-dev 
    - name: Build
      run: cd src && make && mv quake ../quake32
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: quake32
        path: quake32

  build-win64:
    name: "Build for Linux 64-bit"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt-get install -y --no-install-recommends libx11-dev mesa-common-dev libglx-dev libxcursor-dev mesa-vulkan-drivers libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libglu1-mesa-dev 
    - name: Build
      run: cd src && make && mv quake ../quake64
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: quake64
        path: quake64

  release:
    name: "Release"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs: [build-win32, build-win64]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download from build-win32
      uses: actions/download-artifact@v4
      with:
        name: quake32
    - name: Download from build-win64
      uses: actions/download-artifact@v4
      with:
        name: quake64
    - name: Delete old release
      run: gh release delete "latest" --cleanup-tag -y || true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release
      run: gh release create -t "latest" "latest" quake32 quake64 -n "Latest"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
